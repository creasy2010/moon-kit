import {Command,pageKey} from '../constant';
import api from '@/api';
import {redux} from  'moon-runtime';

<% pageModel.actions.forEach(action=>{ %>
import <%=action.className %> from './<%=action.name%>'
<% }) %>

 <% pageModel.dataModels.forEach(actor=>{ %>
import * as <%=actor.instanceName%> from '../reducers/<%=actor.name%>';
 <% }) %>

import {IAllReducerProps} from "../types";


export class PageModel extends redux.BaseModel<IAllReducerProps>{

  actions= {
   <% pageModel.actions.forEach(action=>{ %>
          <%=action.instanceName %> :new <%=action.className %>(this),
      <% }) %>
  }

  constructor() {
    super(pageKey,{
           <% pageModel.dataModels.forEach(actor=>{ %>
                         <%=actor.instanceName%>,
            <% }) %>
    });
  }


  /**
   * 初始化数据
   */
  async init() {
    this.emit(Command.init,{
    <% pageModel.dataModels.forEach(actor=>{ %>
   // <%=actor.instanceName%>:{},
    <% }) %>
    });
  }

}

export default new PageModel();


// create by moon https://github.com/creasy2010/moon
