// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`pc生成页面测试 收银台页面生成 1`] = `
Object {
  "src/pages/cashier/main/actions/cartAction.ts": "import {Command} from \\"../constant\\";
import {IAllReducerProps} from \\"../types\\";
import {redux} from  'moon-runtime';
import {PageModel} from './index';
import api from \\"@/api\\";

export default class \${cartAction} extends redux.BaseAction<IAllReducerProps> {

  constructor(pageModel:PageModel) {
    super(pageModel);
  }

 
        /**
         * 添加商品
         */
        async add() {
            
         },
   
        /**
         * 删除商品
         */
        async del() {
            
         },
   
        /**
         * 选择优惠券
         */
        async chooseCoupon() {
            
         },
   
        /**
         * 去除选中优惠券
         */
        async delChoosedCoupon() {
            
         },
   
}

//create by moon https://github.com/creasy2010/moon",
  "src/pages/cashier/main/actions/contentAction.ts": "import {Command} from \\"../constant\\";
import {IAllReducerProps} from \\"../types\\";
import {redux} from  'moon-runtime';
import {PageModel} from './index';
import api from \\"@/api\\";

export default class \${contentAction} extends redux.BaseAction<IAllReducerProps> {

  constructor(pageModel:PageModel) {
    super(pageModel);
  }

 
        /**
         * 
              普通条件查询可以走,commonChange
              
         */
        async modifySearchGoods(param,options:{
      isQuery:boolean;
      isResetPage:boolean;
    }={isQuery:true,isResetPage:true}) {
            
      options.isResetPage?(param.pageNum=0):null;
      dispatch({ type: Command.modifyRequestGoods, payload: param});
      //修改完直接查询;
      if(options.isQuery) {
        await this.query()
      }
      
         },
   
        /**
         * 查询下一页
         */
        async nextPageGoods() {
            
      let {request} = getData().main;
      request.pageNum=request.pageNum+1;
      dispatch({ type: Command.modifyRequestGoods, payload: request });
      await this.query();
              
         },
   
        /**
         * 以当前查询条件查询
         */
        async queryGoods() {
            let {request} =  getData().main;
      //TODO 接口缺失 
      // let {projectVOPage:{total,list}} = await api.PetGoodsController.list(
      
      dispatch({ type: Command.queryResultGoods, payload: {
        total:0,
        list:[]
        } });
        
         },
   
        /**
         * 
              普通条件查询可以走,commonChange
              
         */
        async modifySearchService(param,options:{
      isQuery:boolean;
      isResetPage:boolean;
    }={isQuery:true,isResetPage:true}) {
            
      options.isResetPage?(param.pageNum=0):null;
      dispatch({ type: Command.modifyRequestService, payload: param});
      //修改完直接查询;
      if(options.isQuery) {
        await this.query()
      }
      
         },
   
        /**
         * 查询下一页
         */
        async nextPageService() {
            
      let {request} = getData().main;
      request.pageNum=request.pageNum+1;
      dispatch({ type: Command.modifyRequestService, payload: request });
      await this.query();
              
         },
   
        /**
         * 以当前查询条件查询
         */
        async queryService() {
            let {request} =  getData().main;
      //TODO 接口缺失 
      // let {projectVOPage:{total,list}} = await api.ProjectController.page(
      
      dispatch({ type: Command.queryResultService, payload: {
        total:0,
        list:[]
        } });
        
         },
   
        /**
         * 
              普通条件查询可以走,commonChange
              
         */
        async modifySearchCard(param,options:{
      isQuery:boolean;
      isResetPage:boolean;
    }={isQuery:true,isResetPage:true}) {
            
      options.isResetPage?(param.pageNum=0):null;
      dispatch({ type: Command.modifyRequestCard, payload: param});
      //修改完直接查询;
      if(options.isQuery) {
        await this.query()
      }
      
         },
   
        /**
         * 查询下一页
         */
        async nextPageCard() {
            
      let {request} = getData().main;
      request.pageNum=request.pageNum+1;
      dispatch({ type: Command.modifyRequestCard, payload: request });
      await this.query();
              
         },
   
        /**
         * 以当前查询条件查询
         */
        async queryCard() {
            let {request} =  getData().main;
      //TODO 接口缺失 
      // let {projectVOPage:{total,list}} = await api.BossGoodsEvaluateController.page(
      
      dispatch({ type: Command.queryResultCard, payload: {
        total:0,
        list:[]
        } });
        
         },
   
        /**
         * 修改关键字
         */
        async modifyKeyWord() {
            
         },
   
}

//create by moon https://github.com/creasy2010/moon",
  "src/pages/cashier/main/actions/index.ts": "import {Command} from '../constant';
import api from 'api';
import {redux} from 'moon-runtime';

import CartAction from './cartAction';

import ContentAction from './contentAction';

import * as cashierMainCart from '../reducers/cart';

import * as cashierMainContent from '../reducers/content';

import {IAllReducerProps} from '../types';

export class PageModel extends redux.BaseModel<IAllReducerProps> {
  models = {
    cashierMainCart,

    cashierMainContent,
  };

  actions = {
    cartAction: new CartAction(this),

    contentAction: new ContentAction(this),
  };

  constructor() {
    super('CashierMain');
  }

  /**
   * 初始化数据
   */
  async init() {
    this.emit(Command.init, {
      //main  :{},
    });
  }
}

export default new PageModel();

//create by moon https://github.com/creasy2010/moon
",
  "src/pages/cashier/main/components/cart-foot.less": "@import \\"~style/theme.less\\";

.cartFoot {
}

",
  "src/pages/cashier/main/components/cart-foot.tsx": "import * as React from 'react';
import * as T from '../types';
import './cart-foot.less';
import pageModel from '../actions';
import {connect} from 'react-redux';
import {store2Props} from '../selectors';

type ICartFootProps = T.IAllReducerProps & T.ICartFootProps;

@connect<Partial<ICartFootProps>, T.ICartFootState>(
  store2Props,
  actions,
)
export default class CartFoot extends React.Component<
  Partial<ICartFootProps>,
  T.ICartFootState
> {
  constructor(props: ICartFootProps) {
    super(props);
  }

  /**
    
*/
  render() {
    let {
      cart,

      content,
    } = this.props;

    return (
      <div className=\\"cartFoot\\">
        <div />
      </div>
    );
  }
}

//create by moon https://github.com/creasy2010/moon
",
  "src/pages/cashier/main/components/cart-header.less": "@import \\"~style/theme.less\\";

.cartHeader {
}

",
  "src/pages/cashier/main/components/cart-header.tsx": "import * as React from 'react';
import * as T from '../types';
import './cart-header.less';
import pageModel from '../actions';
import {connect} from 'react-redux';
import {store2Props} from '../selectors';

type ICartHeaderProps = T.IAllReducerProps & T.ICartHeaderProps;

@connect<Partial<ICartHeaderProps>, T.ICartHeaderState>(
  store2Props,
  actions,
)
export default class CartHeader extends React.Component<
  Partial<ICartHeaderProps>,
  T.ICartHeaderState
> {
  constructor(props: ICartHeaderProps) {
    super(props);
  }

  /**
    
*/
  render() {
    let {
      cart,

      content,
    } = this.props;

    return (
      <div className=\\"cartHeader\\">
        <div />
      </div>
    );
  }
}

//create by moon https://github.com/creasy2010/moon
",
  "src/pages/cashier/main/components/cart-list.less": "@import \\"~style/theme.less\\";

.cartList {
}

",
  "src/pages/cashier/main/components/cart-list.tsx": "import * as React from 'react';
import * as T from '../types';
import './cart-list.less';
import pageModel from '../actions';
import {connect} from 'react-redux';
import {store2Props} from '../selectors';

type ICartListProps = T.IAllReducerProps & T.ICartListProps;

@connect<Partial<ICartListProps>, T.ICartListState>(
  store2Props,
  actions,
)
export default class CartList extends React.Component<
  Partial<ICartListProps>,
  T.ICartListState
> {
  constructor(props: ICartListProps) {
    super(props);
  }

  /**
    
*/
  render() {
    let {
      cart,

      content,
    } = this.props;

    return (
      <div className=\\"cartList\\">
        <div />
      </div>
    );
  }
}

//create by moon https://github.com/creasy2010/moon
",
  "src/pages/cashier/main/components/cart-summary.less": "@import \\"~style/theme.less\\";

.cartSummary {
}

",
  "src/pages/cashier/main/components/cart-summary.tsx": "import * as React from 'react';
import * as T from '../types';
import './cart-summary.less';
import pageModel from '../actions';
import {connect} from 'react-redux';
import {store2Props} from '../selectors';

type ICartSummaryProps = T.IAllReducerProps & T.ICartSummaryProps;

@connect<Partial<ICartSummaryProps>, T.ICartSummaryState>(
  store2Props,
  actions,
)
export default class CartSummary extends React.Component<
  Partial<ICartSummaryProps>,
  T.ICartSummaryState
> {
  constructor(props: ICartSummaryProps) {
    super(props);
  }

  /**
    
*/
  render() {
    let {
      cart,

      content,
    } = this.props;

    return (
      <div className=\\"cartSummary\\">
        <div />
      </div>
    );
  }
}

//create by moon https://github.com/creasy2010/moon
",
  "src/pages/cashier/main/components/cart.less": "@import \\"~style/theme.less\\";

.cart {
}

",
  "src/pages/cashier/main/components/cart.tsx": "import * as React from 'react';
import * as T from '../types';
import './cart.less';
import pageModel from '../actions';
import {connect} from 'react-redux';
import {store2Props} from '../selectors';

type ICartProps = T.IAllReducerProps & T.ICartProps;

@connect<Partial<ICartProps>, T.ICartState>(
  store2Props,
  actions,
)
export default class Cart extends React.Component<
  Partial<ICartProps>,
  T.ICartState
> {
  constructor(props: ICartProps) {
    super(props);
  }

  /**
    
*/
  render() {
    let {
      cart,

      content,
    } = this.props;

    return (
      <div className=\\"cart\\">
        <div />
      </div>
    );
  }
}

//create by moon https://github.com/creasy2010/moon
",
  "src/pages/cashier/main/components/content-bottom.less": "@import \\"~style/theme.less\\";

.contentBottom {
}

",
  "src/pages/cashier/main/components/content-bottom.tsx": "import * as React from 'react';
import * as T from '../types';
import './content-bottom.less';
import pageModel from '../actions';
import {connect} from 'react-redux';
import {store2Props} from '../selectors';

type IContentBottomProps = T.IAllReducerProps & T.IContentBottomProps;

@connect<Partial<IContentBottomProps>, T.IContentBottomState>(
  store2Props,
  actions,
)
export default class ContentBottom extends React.Component<
  Partial<IContentBottomProps>,
  T.IContentBottomState
> {
  constructor(props: IContentBottomProps) {
    super(props);
  }

  /**
    
*/
  render() {
    let {
      cart,

      content,
    } = this.props;

    return (
      <div className=\\"contentBottom\\">
        <div />
      </div>
    );
  }
}

//create by moon https://github.com/creasy2010/moon
",
  "src/pages/cashier/main/components/content-search.less": "@import \\"~style/theme.less\\";

.contentSearch {
}

",
  "src/pages/cashier/main/components/content-search.tsx": "import * as React from 'react';
import * as T from '../types';
import './content-search.less';
import pageModel from '../actions';
import {connect} from 'react-redux';
import {store2Props} from '../selectors';

type IContentSearchProps = T.IAllReducerProps & T.IContentSearchProps;

@connect<Partial<IContentSearchProps>, T.IContentSearchState>(
  store2Props,
  actions,
)
export default class ContentSearch extends React.Component<
  Partial<IContentSearchProps>,
  T.IContentSearchState
> {
  constructor(props: IContentSearchProps) {
    super(props);
  }

  /**
    
*/
  render() {
    let {
      cart,

      content,
    } = this.props;

    return (
      <div className=\\"contentSearch\\">
        <div />
      </div>
    );
  }
}

//create by moon https://github.com/creasy2010/moon
",
  "src/pages/cashier/main/components/content-tabs-cards.less": "@import \\"~style/theme.less\\";

.contentTabsCards {
}

",
  "src/pages/cashier/main/components/content-tabs-cards.tsx": "import * as React from 'react';
import * as T from '../types';
import './content-tabs-cards.less';
import pageModel from '../actions';
import {connect} from 'react-redux';
import {store2Props} from '../selectors';

type IContentTabsCardsProps = T.IAllReducerProps & T.IContentTabsCardsProps;

@connect<Partial<IContentTabsCardsProps>, T.IContentTabsCardsState>(
  store2Props,
  actions,
)
export default class ContentTabsCards extends React.Component<
  Partial<IContentTabsCardsProps>,
  T.IContentTabsCardsState
> {
  constructor(props: IContentTabsCardsProps) {
    super(props);
  }

  /**
    
*/
  render() {
    let {
      cart,

      content,
    } = this.props;

    return (
      <div className=\\"contentTabsCards\\">
        <div />
      </div>
    );
  }
}

//create by moon https://github.com/creasy2010/moon
",
  "src/pages/cashier/main/components/content-tabs-goods.less": "@import \\"~style/theme.less\\";

.contentTabsGoods {
}

",
  "src/pages/cashier/main/components/content-tabs-goods.tsx": "import * as React from 'react';
import * as T from '../types';
import './content-tabs-goods.less';
import pageModel from '../actions';
import {connect} from 'react-redux';
import {store2Props} from '../selectors';

type IContentTabsGoodsProps = T.IAllReducerProps & T.IContentTabsGoodsProps;

@connect<Partial<IContentTabsGoodsProps>, T.IContentTabsGoodsState>(
  store2Props,
  actions,
)
export default class ContentTabsGoods extends React.Component<
  Partial<IContentTabsGoodsProps>,
  T.IContentTabsGoodsState
> {
  constructor(props: IContentTabsGoodsProps) {
    super(props);
  }

  /**
    
*/
  render() {
    let {
      cart,

      content,
    } = this.props;

    return (
      <div className=\\"contentTabsGoods\\">
        <div />
      </div>
    );
  }
}

//create by moon https://github.com/creasy2010/moon
",
  "src/pages/cashier/main/components/content-tabs-service.less": "@import \\"~style/theme.less\\";

.contentTabsService {
}

",
  "src/pages/cashier/main/components/content-tabs-service.tsx": "import * as React from 'react';
import * as T from '../types';
import './content-tabs-service.less';
import pageModel from '../actions';
import {connect} from 'react-redux';
import {store2Props} from '../selectors';

type IContentTabsServiceProps = T.IAllReducerProps & T.IContentTabsServiceProps;

@connect<Partial<IContentTabsServiceProps>, T.IContentTabsServiceState>(
  store2Props,
  actions,
)
export default class ContentTabsService extends React.Component<
  Partial<IContentTabsServiceProps>,
  T.IContentTabsServiceState
> {
  constructor(props: IContentTabsServiceProps) {
    super(props);
  }

  /**
    
*/
  render() {
    let {
      cart,

      content,
    } = this.props;

    return (
      <div className=\\"contentTabsService\\">
        <div />
      </div>
    );
  }
}

//create by moon https://github.com/creasy2010/moon
",
  "src/pages/cashier/main/components/content-tabs.less": "@import \\"~style/theme.less\\";

.contentTabs {
}

",
  "src/pages/cashier/main/components/content-tabs.tsx": "import * as React from 'react';
import * as T from '../types';
import './content-tabs.less';
import pageModel from '../actions';
import {connect} from 'react-redux';
import {store2Props} from '../selectors';

type IContentTabsProps = T.IAllReducerProps & T.IContentTabsProps;

@connect<Partial<IContentTabsProps>, T.IContentTabsState>(
  store2Props,
  actions,
)
export default class ContentTabs extends React.Component<
  Partial<IContentTabsProps>,
  T.IContentTabsState
> {
  constructor(props: IContentTabsProps) {
    super(props);
  }

  /**
    
*/
  render() {
    let {
      cart,

      content,
    } = this.props;

    return (
      <div className=\\"contentTabs\\">
        <div />
      </div>
    );
  }
}

//create by moon https://github.com/creasy2010/moon
",
  "src/pages/cashier/main/components/content.less": "@import \\"~style/theme.less\\";

.content {
}

",
  "src/pages/cashier/main/components/content.tsx": "import * as React from 'react';
import * as T from '../types';
import './content.less';
import pageModel from '../actions';
import {connect} from 'react-redux';
import {store2Props} from '../selectors';

type IContentProps = T.IAllReducerProps & T.IContentProps;

@connect<Partial<IContentProps>, T.IContentState>(
  store2Props,
  actions,
)
export default class Content extends React.Component<
  Partial<IContentProps>,
  T.IContentState
> {
  constructor(props: IContentProps) {
    super(props);
  }

  /**
    
*/
  render() {
    let {
      cart,

      content,
    } = this.props;

    return (
      <div className=\\"content\\">
        <div />
      </div>
    );
  }
}

//create by moon https://github.com/creasy2010/moon
",
  "src/pages/cashier/main/constant.ts": "export const pageKey = 'CashierMain';

export const BASE = pageKey + '_';

export enum Command {
  //通用修改数据方法
  commonChange = 'CashierMain_commonChange',
  init = 'CashierMain_INIT',
  clean = 'CashierMain_CLEAN',

  /*
        添加商品
    */
  cart_add = 'CashierMain_cart_add',

  /*
        删除商品
    */
  cart_del = 'CashierMain_cart_del',

  /*
        选择优惠券
    */
  cart_chooseCoupon = 'CashierMain_cart_chooseCoupon',

  /*
        去除选中优惠券
    */
  cart_delChoosedCoupon = 'CashierMain_cart_delChoosedCoupon',

  /*
        修改查询条件数据
    */
  content_modifyRequestGoods = 'CashierMain_content_modifyRequestGoods',

  /*
        清空查询结果
    */
  content_cleanListGoods = 'CashierMain_content_cleanListGoods',

  /*
        
    */
  content_queryResultGoods = 'CashierMain_content_queryResultGoods',

  /*
        修改查询条件数据
    */
  content_modifyRequestService = 'CashierMain_content_modifyRequestService',

  /*
        清空查询结果
    */
  content_cleanListService = 'CashierMain_content_cleanListService',

  /*
        
    */
  content_queryResultService = 'CashierMain_content_queryResultService',

  /*
        修改查询条件数据
    */
  content_modifyRequestCard = 'CashierMain_content_modifyRequestCard',

  /*
        清空查询结果
    */
  content_cleanListCard = 'CashierMain_content_cleanListCard',

  /*
        
    */
  content_queryResultCard = 'CashierMain_content_queryResultCard',
}

//create by moon https://github.com/creasy2010/moon
",
  "src/pages/cashier/main/index.less": "@import \\"~style/theme.less\\";

.cashierMain {
}


",
  "src/pages/cashier/main/index.tsx": "import * as React from 'react';
import {connect} from 'react-redux';
import './index.less';
import * as T from './types';
import pageModel from './actions';
import {store2Props} from './selectors';

import Cart from './components/cart';

import CartHeader from './components/cart-header';

import CartList from './components/cart-list';

import CartFoot from './components/cart-foot';

import CartSummary from './components/cart-summary';

import Content from './components/content';

import ContentSearch from './components/content-search';

import ContentTabs from './components/content-tabs';

import ContentTabsService from './components/content-tabs-service';

import ContentTabsGoods from './components/content-tabs-goods';

import ContentTabsCards from './components/content-tabs-cards';

import ContentBottom from './components/content-bottom';

@connect<Partial<T.IAllReducerProps>, any>(store2Props)
export default class CashierMain extends React.Component<
  Partial<T.IAllReducerProps>,
  any
> {
  componentDidMount() {
    pageModel.init();
  }

  componentWillUnmount() {
    pageModel.clean();
  }

  render() {
    let {
      cart,

      content,
    } = this.props;

    return (
      <div id=\\"cashierMain\\" className=\\"cashierMain\\">
        <div />
      </div>
    );
  }
}

//create by moon https://github.com/creasy2010/moon
",
  "src/pages/cashier/main/reducers/cart.ts": "import {Command} from '../constant';
import _ from 'lodash';
import {ICartReducer} from '../types';
import produce from 'immer';

const INITIAL_STATE: ICartReducer = {
  isReady: false,

  list: '',

  customer: '',

  coupons: '',

  coupon2Use: '',
};

/*
添加商品
*/
export function add(state: ICartReducer, payload: any): ICartReducer {
  return state;
}

/*
删除商品
*/
export function del(state: ICartReducer, payload: any): ICartReducer {
  return state;
}

/*
选择优惠券
*/
export function chooseCoupon(state: ICartReducer, payload: any): ICartReducer {
  return state;
}

/*
去除选中优惠券
*/
export function delChoosedCoupon(
  state: ICartReducer,
  payload: any,
): ICartReducer {
  return state;
}

//create by moon https://github.com/creasy2010/moon
",
  "src/pages/cashier/main/reducers/content.ts": "import {Command} from '../constant';
import _ from 'lodash';
import {IContentReducer} from '../types';
import produce from 'immer';

const INITIAL_STATE: IContentReducer = {
  isReady: false,

  type: 0,

  requestGoods: {q: '', pageNum: 0, pageSize: 10},

  totalGoods: 0,

  listGoods: [{}],

  requestService: {q: '', pageNum: 0, pageSize: 10},

  totalService: 0,

  listService: [{}],

  requestCard: {q: '', pageNum: 0, pageSize: 10},

  totalCard: 0,

  listCard: [{}],

  goodsCates: [],

  serviceCates: [],
};

/*
修改查询条件数据
*/
export function modifyRequestGoods(
  state: IContentReducer,
  payload: any,
): IContentReducer {
  return state;
}

/*
清空查询结果
*/
export function cleanListGoods(
  state: IContentReducer,
  payload: any,
): IContentReducer {
  return state;
}

/*

*/
export function queryResultGoods(
  state: IContentReducer,
  payload: any,
): IContentReducer {
  return state;
}

/*
修改查询条件数据
*/
export function modifyRequestService(
  state: IContentReducer,
  payload: any,
): IContentReducer {
  return state;
}

/*
清空查询结果
*/
export function cleanListService(
  state: IContentReducer,
  payload: any,
): IContentReducer {
  return state;
}

/*

*/
export function queryResultService(
  state: IContentReducer,
  payload: any,
): IContentReducer {
  return state;
}

/*
修改查询条件数据
*/
export function modifyRequestCard(
  state: IContentReducer,
  payload: any,
): IContentReducer {
  return state;
}

/*
清空查询结果
*/
export function cleanListCard(
  state: IContentReducer,
  payload: any,
): IContentReducer {
  return state;
}

/*

*/
export function queryResultCard(
  state: IContentReducer,
  payload: any,
): IContentReducer {
  return state;
}

//create by moon https://github.com/creasy2010/moon
",
  "src/pages/cashier/main/selectors.ts": "import {createSelector} from 'reselect';
import {IAllReducerProps} from './types';

export function store2Props({
  CashierMainCart,

  CashierMainContent,
}: any): IAllReducerProps {
  return {
    cart: CashierMainCart,

    content: CashierMainContent,
  };
}

//衍生数据使用请参考:  https://github.com/reduxjs/reselect
//create by moon https://github.com/creasy2010/moon
",
  "src/pages/cashier/main/types.ts": "import Actions from './actions';
import {GoodsVO2} from 'api/PetGoodsController';
import {ProjectVO} from 'api/ProjectController';
import {GoodsEvaluateVO3} from 'api/BossGoodsEvaluateController';
import {StoreCateResponseVOArray} from 'api/StoreCateController';
import {ProjectCatePageVO} from 'api/StoreProjectCateController';

export interface ICartReducer {
  isReady: boolean;
  isLoading?: boolean;

  list: ICartList;

  customer: ICartCustomer;

  coupons: ICartCoupons;

  coupon2Use: ICartCoupon2Use;
}

export interface IContentReducer {
  isReady: boolean;
  isLoading?: boolean;

  type: IContentType;

  requestGoods: IContentRequestGoods;

  totalGoods: IContentTotalGoods;

  listGoods: GoodsVO2[];

  requestService: IContentRequestService;

  totalService: IContentTotalService;

  listService: ProjectVO[];

  requestCard: IContentRequestCard;

  totalCard: IContentTotalCard;

  listCard: GoodsEvaluateVO3[];

  goodsCates: StoreCateResponseVOArray;

  serviceCates: ProjectCatePageVO[];
}

export type IAllReducerProps = {
  cart: ICartReducer;

  content: IContentReducer;

  [name: string]: any;
};

export type ICartProps = {};
export type ICartState = {};

export type ICartHeaderProps = {};
export type ICartHeaderState = {};

export type ICartListProps = {};
export type ICartListState = {};

export type ICartFootProps = {};
export type ICartFootState = {};

export type ICartSummaryProps = {};
export type ICartSummaryState = {};

export type IContentProps = {};
export type IContentState = {};

export type IContentSearchProps = {};
export type IContentSearchState = {};

export type IContentTabsProps = {};
export type IContentTabsState = {};

export type IContentTabsServiceProps = {};
export type IContentTabsServiceState = {};

export type IContentTabsGoodsProps = {};
export type IContentTabsGoodsState = {};

export type IContentTabsCardsProps = {};
export type IContentTabsCardsState = {};

export type IContentBottomProps = {};
export type IContentBottomState = {};

export type ICartList = string;
export type ICartCustomer = string;
export type ICartCoupons = string;
export type ICartCoupon2Use = string;
export type IContentType = number;
export interface IContentRequestGoods {
  q?: string;
  pageNum?: number;
  pageSize?: number;
  [k: string]: any;
}
export type IContentTotalGoods = number;
export interface IContentRequestService {
  q?: string;
  pageNum?: number;
  pageSize?: number;
  [k: string]: any;
}
export type IContentTotalService = number;
export interface IContentRequestCard {
  q?: string;
  pageNum?: number;
  pageSize?: number;
  [k: string]: any;
}
export type IContentTotalCard = number;

//create by moon https://github.com/creasy2010/moon
",
}
`;
